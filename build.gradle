//<editor-fold desc="Конфигурация корневого скрипта сборки">
buildscript {
    ext {
        junitVersion = '5.2.0'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath group: 'io.spring.gradle', name: 'dependency-management-plugin', version: '1.0.6.RELEASE'
    }
}
//</editor-fold>

//<editor-fold desc="Конфигурация всех модулей проекта">
allprojects {
    apply plugin: 'java'
    apply plugin: 'idea'                                // Для правильного формирования модулей в IDEA
    apply plugin: 'io.spring.dependency-management'     // Для возможности использовать dependencyManagement

    //<editor-fold desc="Подсказки компилятору">
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    compileJava.options.encoding = 'UTF-8'
    compileTestJava.options.encoding = 'UTF-8'
    //</editor-fold>

    // Настройки проекта в IDEA
    idea {
        module {
            excludeDirs += files('log', '.idea', 'gradle')
        }
    }

    //<editor-fold desc="Зависимости собираемого компонента">
    repositories {
        mavenCentral()
    }

    dependencies {
        // Lombok
        compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.0'

        // API для написания тестов
        testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: "${junitVersion}"
        // Для запуска только JUnit5 тестов
        testRuntime group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: "${junitVersion}"
        // Для запуска JUnit4 тестов вместе с JUnit5
        testRuntime group: 'org.junit.vintage', name: 'junit-vintage-engine', version: "${junitVersion}"
    }
    //</editor-fold>

    test {
        // По умолчанию поддержка JUnit5 тестов выключена, поэтому включаем её явно
        useJUnitPlatform()
    }
}
//</editor-fold>

//<editor-fold desc="Конфигурация корневого проекта">
jar {
    // Корневой проект не предназначен для выпуска в виде дистрибутива.
    enabled = false
}
//</editor-fold>